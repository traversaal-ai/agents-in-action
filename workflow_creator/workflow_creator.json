{
    "nodes": [
      {
        "parameters": {
          "options": {}
        },
        "type": "@n8n/n8n-nodes-langchain.chatTrigger",
        "typeVersion": 1.1,
        "position": [
          300,
          -480
        ],
        "id": "1db158e8-55a2-4f64-b054-dd0130618b51",
        "name": "When chat message received",
        "webhookId": "d832bc01-555e-4a24-a8cc-31db8fc1c816"
      },
      {
        "parameters": {
          "options": {}
        },
        "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
        "typeVersion": 1,
        "position": [
          260,
          -220
        ],
        "id": "cf103ac9-cfc6-46d9-9bb7-e00c4562cfdb",
        "name": "GPT 4.1 mini",
        "credentials": {
          "openRouterApi": {
            "id": "69bhE8HIWFPOjOGf",
            "name": "OpenRouter account"
          }
        }
      },
      {
        "parameters": {
          "content": "# n8n Developer Agent\n",
          "height": 280,
          "width": 660,
          "color": 4
        },
        "type": "n8n-nodes-base.stickyNote",
        "typeVersion": 1,
        "position": [
          200,
          -580
        ],
        "id": "e44dabcc-b47e-455c-a93c-41ec8a360880",
        "name": "Sticky Note1"
      },
      {
        "parameters": {
          "options": {
            "systemMessage": "=# Overview\nYour job is to take the incoming query and pass that to the \"Developer Tool\" tool EXACTLY AS YOU RECEIVED IT. Don't change any of the wording.\n\nOnce you receive a workflow link back from the Developer Tool, present it to the human as a clickable link that says \"View your finished workflow\" \n\nThe link should be clickable and take the user to the workflow.\n"
          }
        },
        "type": "@n8n/n8n-nodes-langchain.agent",
        "typeVersion": 2,
        "position": [
          460,
          -480
        ],
        "id": "0bf78926-e581-485f-97ed-339a5eb2759e",
        "name": "n8n Developer"
      },
      {
        "parameters": {
          "description": "Call this tool once you have a finished workflow design to build the workflow.",
          "workflowId": {
            "__rl": true,
            "value": "AHemRvz7lwn9AUtM",
            "mode": "id"
          },
          "workflowInputs": {
            "mappingMode": "defineBelow",
            "value": {},
            "matchingColumns": [],
            "schema": [],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          }
        },
        "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
        "typeVersion": 2.2,
        "position": [
          660,
          -220
        ],
        "id": "18a8cac1-0003-42a4-862c-3dabb8107dca",
        "name": "Developer Tool"
      },
      {
        "parameters": {
          "content": "## Brain\n",
          "height": 200,
          "width": 320,
          "color": 6
        },
        "type": "n8n-nodes-base.stickyNote",
        "typeVersion": 1,
        "position": [
          200,
          -280
        ],
        "id": "4f486901-bbb9-44f2-ba0a-25f0b4eba676",
        "name": "Sticky Note2"
      },
      {
        "parameters": {
          "content": "## Tool\n",
          "height": 200,
          "width": 320,
          "color": 5
        },
        "type": "n8n-nodes-base.stickyNote",
        "typeVersion": 1,
        "position": [
          540,
          -280
        ],
        "id": "c0c7124e-9120-442e-bc6f-42964433486f",
        "name": "Sticky Note3"
      },
      {
        "parameters": {},
        "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "typeVersion": 1.3,
        "position": [
          400,
          -220
        ],
        "id": "0d6cd414-03a9-4343-9acd-7594d4490071",
        "name": "Simple Memory"
      },
      {
        "parameters": {
          "content": "# üõ†Ô∏è Setup Guide  \n**Author:** [Nate Herk](https://www.youtube.com/@nateherk)\n\nFollow the steps below to get this workflow up and running:\n\n### MY RECOMMENDATION\nHook up the chat trigger directly to the workflow builder workflow instead of the \"When executed by another workflow\" trigger. This will make testing easier and keep everything in one execution. \n\nIf you want to take the multi-agent approach, then follow the below instructions. \n\n### ‚úÖ Step 1: Connect Your [OpenRouter](https://openrouter.ai/) API Key  \nThis powers the main LLM agent. Make sure your key is active and added via the HTTP Request or Credential node.\n\n### ‚úÖ Step 2: Add Your [Anthropic](https://console.anthropic.com/dashboard) API Key (Optional)  \nIf you want to enable thinking using Claude Opus 4, connect your Anthropic API key.\n\n### ‚úÖ Step 3: Link the Developer Tool  \nMake sure the node or sub-workflow responsible for building the JSON is properly connected to the main agent. The developer tool should return a structured workflow JSON back to the main flow.\n\n### ‚úÖ Step 4: Add Your n8n API Key  \nCreate your **n8n API credential** and connect it in the credential section. This is what allows the agent to spin up new workflows automatically in your instance.\n\n### ‚úÖ Step 5: Copy the [Google Doc](https://docs.google.com/document/d/1TiRusVo4DbbANwAr7I0GUGDZY3pmEmHZy3k66mRxLCg/edit?usp=sharing)  \nMake a copy in your own Google Suite so you can edit, test, and reference it inside the Google Drive node. Then make sure to connect your Google credentials.\n\n### üß™ Final Step: Start Testing  \nOnce all connections are made, start prompting the agent and watch it build n8n workflows on demand.\n",
          "height": 860,
          "width": 720
        },
        "type": "n8n-nodes-base.stickyNote",
        "typeVersion": 1,
        "position": [
          -540,
          -580
        ],
        "id": "a6249e36-aa55-4b02-8643-0ae128cc5fbf",
        "name": "Sticky Note4"
      },
      {
        "parameters": {
          "model": {
            "__rl": true,
            "value": "claude-opus-4-20250514",
            "mode": "list",
            "cachedResultName": "Claude Opus 4"
          },
          "options": {
            "maxTokensToSample": 8000,
            "thinking": true,
            "thinkingBudget": 1024
          }
        },
        "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
        "typeVersion": 1.3,
        "position": [
          740,
          280
        ],
        "id": "1864acb0-a8be-4c09-a8b5-166c2db1d9b7",
        "name": "Claude Opus 4",
        "credentials": {
          "anthropicApi": {
            "id": "d5g3MAHOZ3DGLdBs",
            "name": "Anthropic account"
          }
        }
      },
      {
        "parameters": {
          "operation": "text",
          "options": {}
        },
        "type": "n8n-nodes-base.extractFromFile",
        "typeVersion": 1,
        "position": [
          600,
          80
        ],
        "id": "fe1ab2cb-1436-4099-94e7-3bed1dda8489",
        "name": "Extract from File"
      },
      {
        "parameters": {
          "operation": "create",
          "workflowObject": "={{ $json.output}}",
          "requestOptions": {}
        },
        "type": "n8n-nodes-base.n8n",
        "typeVersion": 1,
        "position": [
          1100,
          80
        ],
        "id": "6664d8a3-d49a-4bca-a955-925194f08754",
        "name": "n8n",
        "credentials": {
          "n8nApi": {
            "id": "pA3bRjcRlBV3014V",
            "name": "n8n account"
          }
        }
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "f4b8c16e-6788-4c17-b643-94a3f0620860",
                "name": "Workflow Link",
                "value": "=https://n8n.srv874091.hstgr.cloud/workflow/{{ $json.id }}",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          1260,
          80
        ],
        "id": "84f5381f-4903-4479-b39b-3e78c364d945",
        "name": "Workflow Link"
      },
      {
        "parameters": {
          "operation": "download",
          "fileId": {
            "__rl": true,
            "value": "https://docs.google.com/document/d/1pMoqmebS7Trk-VplCuBadJYsE_PDFOHawmcZzGvItYo/edit?usp=sharing",
            "mode": "url"
          },
          "options": {
            "googleFileConversion": {
              "conversion": {
                "docsToFormat": "text/plain"
              }
            }
          }
        },
        "type": "n8n-nodes-base.googleDrive",
        "typeVersion": 3,
        "position": [
          440,
          80
        ],
        "id": "5bfd221f-7879-45ea-aaaa-7c690fd33698",
        "name": "Get n8n Docs",
        "credentials": {
          "googleDriveOAuth2Api": {
            "id": "iDtOjwOhcydl36yT",
            "name": "Google Drive account"
          }
        }
      },
      {
        "parameters": {
          "promptType": "define",
          "text": "=User request: {{ $('When Executed by Another Workflow').item.json.query }}",
          "options": {
            "systemMessage": "=# Overview\nYou are an expert AI automation developer specializing in building workflows for n8n. Your job is to translate a human‚Äôs natural language request into a fully functional n8n workflow JSON. It should be comprehensive, functional, and importable. It should have 100% valid JSON structure, node types, and connection methods.\n\n## Output\nYour output should only be the final JSON of the full workflow.\n\nYour output must start with a { and must end with a }.\n- Do not include anything before the { (such as ```json or any markdown formatting).\n- Do not include anything after the } (such as closing code blocks like ``` or explanations).\n\nYour output should be a pure JSON object that begins with { and ends with }, ready to be used as the body of a POST request.\n\nThe JSON must:\n- Be syntactically valid and complete\n- Include a `nodes` array with each node containing all required parameters\n- Include a `connections` object that correctly maps outputs to inputs\n- Start with a `trigger` node if one is required for the use case (e.g., Webhook, Schedule, etc.)\n- Contain descriptive names and parameter values relevant to the user request\n- Avoid placeholders unless no reasonable value can be inferred\n- Contain sticky notes that are explaining what's going on within each step and any credentials or connections that still need to be configured. The colors should vary throughout the workflow.\n\nBefore generating the JSON, analyze the request and:\n1. Break it down into logical automation steps\n2. Choose appropriate nodes based on the steps\n3. Properly connect the nodes to reflect execution order\n\nIf the request is ambiguous, make a best guess using standard automation logic.\n\nDo not return explanations, comments, or any output outside of the JSON markdown block.\n\nYou are expected to produce developer-grade output suitable for direct import into n8n.\n\n## API Submission Requirements\nTo automatically create a workflow using the n8n API, your generated JSON must include the following top-level fields in the final object:\n\n- `name` (string): A clear, descriptive workflow name.\n- `nodes` (array): The complete array of node objects used in the workflow.\n- `connections` (object): A valid map of node-to-node connections.\n- `settings` (object): Workflow-level settings (e.g. `saveManualExecutions`, `executionOrder`).\n- `staticData` (null or object): Set to `null` unless specific static data is needed.\n\nExample ‚Äúsettings‚Äù object:\n  \"settings\": {\n    \"executionOrder\": \"v1\",\n    \"saveManualExecutions\": true,\n    \"saveDataSuccessExecution\": \"all\",\n    \"saveExecutionProgress\": true,\n    \"saveDataErrorExecution\": \"all\",\n    \"errorWorkflow\": \"\",\n    \"timezone\": \"America/New_York\"\n  }\n\n## n8n Documentation\n\n{{ $json.data }}"
          }
        },
        "type": "@n8n/n8n-nodes-langchain.agent",
        "typeVersion": 2,
        "position": [
          780,
          40
        ],
        "id": "3876cc28-6aab-4005-a5a4-d89ec4f64315",
        "name": "n8n Builder"
      },
      {
        "parameters": {
          "content": "# Workflow Builder\n",
          "height": 340,
          "width": 1280,
          "color": 2
        },
        "type": "n8n-nodes-base.stickyNote",
        "typeVersion": 1,
        "position": [
          180,
          -40
        ],
        "id": "69872754-c5f8-4c71-b63a-cb2e1b9357fb",
        "name": "Sticky Note"
      },
      {
        "parameters": {
          "inputSource": "passthrough"
        },
        "type": "n8n-nodes-base.executeWorkflowTrigger",
        "typeVersion": 1.1,
        "position": [
          260,
          80
        ],
        "id": "77be9ed3-1b77-4dc8-9e61-9e4f9cf110ae",
        "name": "When Executed by Another Workflow"
      }
    ],
    "connections": {
      "When chat message received": {
        "main": [
          [
            {
              "node": "n8n Developer",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "GPT 4.1 mini": {
        "ai_languageModel": [
          [
            {
              "node": "n8n Developer",
              "type": "ai_languageModel",
              "index": 0
            }
          ]
        ]
      },
      "Developer Tool": {
        "ai_tool": [
          [
            {
              "node": "n8n Developer",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      },
      "Simple Memory": {
        "ai_memory": [
          [
            {
              "node": "n8n Developer",
              "type": "ai_memory",
              "index": 0
            }
          ]
        ]
      },
      "Claude Opus 4": {
        "ai_languageModel": [
          [
            {
              "node": "n8n Builder",
              "type": "ai_languageModel",
              "index": 0
            }
          ]
        ]
      },
      "Extract from File": {
        "main": [
          [
            {
              "node": "n8n Builder",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "n8n": {
        "main": [
          [
            {
              "node": "Workflow Link",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get n8n Docs": {
        "main": [
          [
            {
              "node": "Extract from File",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "n8n Builder": {
        "main": [
          [
            {
              "node": "n8n",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "When Executed by Another Workflow": {
        "main": [
          [
            {
              "node": "Get n8n Docs",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "pinData": {},
    "meta": {
      "instanceId": "1725aaf255f271a2cb370b9051de0a61864aaf0b262c35ad3f624929f92bfcff"
    }
  }